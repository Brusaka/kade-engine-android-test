# This is a basic workflow to help you get started with Actions

name: Android Build Unoffical

# Controls when the workflow will run
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: krdlab/setup-haxe@v1.1.5
        with:
          haxe-version: 4.2.5
      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r21e
      - uses: actions/setup-java@v1
        with: 
          java-version: 11
      - uses: android-actions/setup-android@v2
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: script run line haha
        run: |
          mkdir "%HAXELIB_ROOT%"
          haxelib setup "%HAXELIB_ROOT%"
          haxelib install lime 8.1.2
          haxelib install openfl
          haxelib --never install flixel
          haxelib run lime setup flixel
          haxelib install flixel-tools
          haxelib install flixel-addons
          haxelib install flixel-ui
          haxelib install hscript
          haxelib install flixel-addons
          haxelib git linc_luajit https://github.com/majigsaw77/linc_luajit.git
          haxelib git extension-webm https://github.com/KadeDev/extension-webm
          haxelib git extension-videoview https://github.com/MAJigsaw77/extension-videoview.git --quiet
          haxelib git extension-androidtools https://github.com/MAJigsaw77/extension-androidtools.git
          haxelib run lime build android --app-version="4.0.0-${{ github.run_id}}"
          
      - uses: actions/upload-artifact@v2
        with:
          name: Android Build Unoffical
          path: export/release/android/bin/app/build/outputs/apk/debug
